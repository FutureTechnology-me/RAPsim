.TH "sgs.controller.simulation.AbstractDistributionAlgorithm" 3 "Wed Oct 28 2015" "Version 0.92" "RAPSim" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sgs.controller.simulation.AbstractDistributionAlgorithm \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBsgs\&.controller\&.interfaces\&.GridChangeListener\fP\&.
.PP
Inherited by \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAbstractDistributionAlgorithm\fP ()"
.br
.ti -1c
.RI "abstract void \fBcalculationStep\fP ()"
.br
.ti -1c
.RI "void \fBinitializeAlgorithm\fP ()"
.br
.ti -1c
.RI "void \fBinitializeFull\fP ()"
.br
.ti -1c
.RI "abstract void \fBgridChanged\fP ()"
.br
.ti -1c
.RI "String \fBgetName\fP ()"
.br
.ti -1c
.RI "abstract String \fBgetDescription\fP ()"
.br
.ti -1c
.RI "abstract void \fBsimulationStarted\fP ()"
.br
.ti -1c
.RI "abstract void \fBsimulationStopped\fP ()"
.br
.ti -1c
.RI "String \fBgenerateList\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "abstract void \fBsetPropertiesForVariables\fP ()"
.br
.ti -1c
.RI "void \fBselectClass\fP (Class<?extends \fBSmartGridObject\fP > selectedClass)"
.br
.ti -1c
.RI "void \fBsetProperties\fP (boolean visible, boolean editable, EnumPV\&.\&.\&.variables)"
.br
.ti -1c
.RI "abstract void \fBsetPropertiesForBusAndPath\fP ()"
.br
.ti -1c
.RI "abstract void \fBunloadAlgorithm\fP ()"
.br
.ti -1c
.RI "void \fBcloseLog\fP ()"
.br
.ti -1c
.RI "void \fBlog\fP (String s)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetDefaultPropertiesForBusAndPath\fP (\fBSgsGridModel\fP gridModel)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "OutputStream \fBlog\fP = null"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static String \fBdescription\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Tobi, Kristofer Schweiger 
.RE
.PP

.PP
Definition at line 25 of file AbstractDistributionAlgorithm\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.AbstractDistributionAlgorithm ()"
Constructor: initialize variables (visibility, properties) used in this algorithm\&. Note: Sub classes must have a Constructor with the parameter \fBGridController\fP for generating automated instances\&. 
.PP
Definition at line 38 of file AbstractDistributionAlgorithm\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.calculationStep ()\fC [pure virtual]\fP"
Calculate grid for one simulation step\&. 
.PP
.RS 4
Buses and Paths are locked before\&. Grid/View-Repaint is automatically called after the function\&. 
.RE
.PP

.PP
Implemented in \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.closeLog ()\fC [protected]\fP"
Try to make a new log-Stream Close log-Stream, if it exists\&. 
.PP
Definition at line 232 of file AbstractDistributionAlgorithm\&.java\&.
.SS "String sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.generateList ()"

.PP
\fBAuthor:\fP
.RS 4
hs all classes who inherit this one, should have this method to create a String, to make the CSV-File 
.RE
.PP

.PP
Definition at line 265 of file AbstractDistributionAlgorithm\&.java\&.
.SS "abstract String sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.getDescription ()\fC [pure virtual]\fP"

.PP
\fBReturns:\fP
.RS 4
description of the specific algorithm used for the 'Info' button 
.RE
.PP

.PP
Implemented in \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "String sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.getName ()"
Get all the Transactions that have taken place 
.PP
\fBReturns:\fP
.RS 4

.PP
the name of the algorithm 
.RE
.PP

.PP
Definition at line 190 of file AbstractDistributionAlgorithm\&.java\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.gridChanged ()\fC [pure virtual]\fP"
Is called if the Grid is modified\&. 
.PP
Implements \fBsgs\&.controller\&.interfaces\&.GridChangeListener\fP\&.
.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.initializeAlgorithm ()"
Initialize Algorithm specific settings and data\&. 
.PP
Definition at line 53 of file AbstractDistributionAlgorithm\&.java\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.initializeFull ()"
Full initialization\&. Should be called if algorithm is used for the first time or the algorithm was changed\&. 
.PP
Definition at line 61 of file AbstractDistributionAlgorithm\&.java\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.log (Strings)\fC [protected]\fP"
Log information if log-Stream exists\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP 
.RE
.PP

.PP
Definition at line 249 of file AbstractDistributionAlgorithm\&.java\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.selectClass (Class<?extends \fBSmartGridObject\fP >selectedClass)\fC [protected]\fP"
Step 1: Select class for enabling variables 
.PP
\fBParameters:\fP
.RS 4
\fIc\fP 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBsetPropertiesForVariables()\fP 
.RE
.PP

.PP
Definition at line 102 of file AbstractDistributionAlgorithm\&.java\&.
.SS "static void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.setDefaultPropertiesForBusAndPath (\fBSgsGridModel\fPgridModel)\fC [static]\fP, \fC [protected]\fP"

.PP
Definition at line 139 of file AbstractDistributionAlgorithm\&.java\&.
.SS "void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.setProperties (booleanvisible, booleaneditable, EnumPV\&.\&.\&.variables)\fC [protected]\fP"
Step 2: Enable variables with their properties\&. Sets properties for selected class and its sub classes\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvisible\fP - the variable is visible to the user 
.br
\fIeditable\fP - the variable is editable for the user 
.br
\fIvariables\fP - variables where specified properties should be set 
.RE
.PP
\fBSee Also:\fP
.RS 4
\fBsetPropertiesForVariables()\fP 
.RE
.PP

.PP
Definition at line 114 of file AbstractDistributionAlgorithm\&.java\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.setPropertiesForBusAndPath ()\fC [protected]\fP, \fC [pure virtual]\fP"
Set \fBSgsGridModel\&.resistanceAttributes\fP, busVariableCollection, pathVariableCollection if used\&. 
.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.setPropertiesForVariables ()\fC [protected]\fP, \fC [pure virtual]\fP"
Set the algorithm specific variables with help of the super class methods\&. 
.PP
\fBSee Also:\fP
.RS 4
\fBselectClass(Class)\fP, \fBsetProperties(boolean,boolean,EnumPV[])\fP, \fBinitializeVariables()\fP 
.RE
.PP

.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.simulationStarted ()\fC [pure virtual]\fP"
Called by time thread\&. Write interesting contents of the simulation to a file\&. Called directly after the simulation was started\&. Use this to make a LOG file if one is used\&. 
.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.simulationStopped ()\fC [pure virtual]\fP"
Called directly after the simulation was stopped\&. Use this to flush/close a log file if one was used\&. 
.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SS "abstract void sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.unloadAlgorithm ()\fC [protected]\fP, \fC [pure virtual]\fP"
Free external resources used by this algorithm\&. 
.PP
Implemented in \fBsgs\&.controller\&.simulation\&.DCPowerFlowCalculator\fP, \fBsgs\&.controller\&.simulation\&.SimplePowerDistribution\fP, \fBsgs\&.controller\&.simulation\&.ACPowerFlowCalculator\fP, and \fBsgs\&.controller\&.simulation\&._TestingAlgorithm\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "String sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.description\fC [static]\fP, \fC [protected]\fP"
Description of how the Algorithm works (to ease selection process in future) 
.PP
Definition at line 30 of file AbstractDistributionAlgorithm\&.java\&.
.SS "OutputStream sgs\&.controller\&.simulation\&.AbstractDistributionAlgorithm\&.log = null\fC [protected]\fP"
Log stream for logging data if activated\&. Can be null 
.PP
Definition at line 32 of file AbstractDistributionAlgorithm\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for RAPSim from the source code\&.
